@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager

<ul class="nav nav-pills flex-column">
    <li class="nav-item">
        <NavLink class="nav-link" href="@(NavRoutes.AccountManage)" Match="NavLinkMatch.All">Profile</NavLink>
    </li>
    <li class="nav-item">
        <NavLink class="nav-link" href="@(NavRoutes.AccountManageEmail)">Email</NavLink>
    </li>
    <li class="nav-item">
        <NavLink class="nav-link" href="@(NavRoutes.AccountManageChangePassword)">Password</NavLink>
    </li>
    @if (hasExternalLogins)
    {
        <li class="nav-item">
            <NavLink class="nav-link" href="@(NavRoutes.AccountManageExternalLogins)">External logins</NavLink>
        </li>
    }
    <li class="nav-item">
        <NavLink class="nav-link" href="@(NavRoutes.AccountManageTwoFactorAuthentication)">Two-factor authentication</NavLink>
    </li>
    <li class="nav-item">
        <NavLink class="nav-link" href="@(NavRoutes.AccountManagePersonalData)">Personal data</NavLink>
    </li>
</ul>

@code {
    private bool hasExternalLogins;

    protected override async Task OnInitializedAsync()
    {
        hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    }
}
